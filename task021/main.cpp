#include <iostream>
#include <string>

//Функция, определяющая может ли одна строка состоять из правильной последовательности символов из другой строки 
bool isSubsequence(std::string s, std::string t) {
    if (s.size()>t.size())                      //если в проверяемой строке сиволов больше, чем в заданной, то
        return false;                           //возвращаем false
    int mid = 0;
    for (int i=0;i<s.size();i++){               //пройдем по элементам проверяемой строки
        for (int j=mid;j<t.size();j++){         //одновременно пройдем по заданной строке, начиная с последнего найденного символа
            if (s[i]==t[j]){                    //если символы двух строк совпали между собой, то
                if ((mid!=j)||(j==0)){          //проверяем, что это не один и тот же элемент, либо это если это нулевой элемент, то
                    mid = j;                    //меняем символ начала поиска строки
                    break;                      //выходим из цикла, чтобы проверить следующие символы в проверяемой строке
                }
            }
            if (j==t.size()-1){                 //если дошли до конца заданной строки, то
                return false;                   //проверяемого символа не нашли, возвращаем false
            }
        }
    }
    return true;
}

int main(int, char**){
    std::string s = "abc";
    std::string t = "ahbgdc";
    
    std::cout<<isSubsequence(s,t);

    return 0;
}