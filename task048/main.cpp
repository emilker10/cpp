#include <iostream>
#include <vector>

//–§—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É—é–∑—â–∞—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π
int uniquePaths(int m, int n) {
    std::vector<std::vector<int>> matrix(m, std::vector<int>(n));
    matrix[0][0] = 1;                                                   //–Ω–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (0, 0) –∏–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è - –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–µ
    //–ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Ç—Ä–∏—Ü—ã
    for (int i = 0; i < matrix.size(); ++i) {
        for (int j = 0; j < matrix[i].size(); ++j) {
            if (i - 1 >= 0) {                                           //–µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π, —Ç–æ
                matrix[i][j] += matrix[i - 1][j];                       //–¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —è—á–µ–π–∫–∏ –≤—ã—à–µ
            }
            if (j - 1 >= 0) {                                           //–µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å—Ç–æ–ª–±–µ—Ü –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º —Å—Ç–æ–ª–±—Ü–æ–º, —Ç–æ
                matrix[i][j] += matrix[i][j - 1];                       //–¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —è—á–µ–π–∫–∏ —Å–ª–µ–≤–∞
            }
        }
    }
    //–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π –¥–æ –ø—Ä–∞–≤–æ–≥–æ –Ω–∏–∂–Ω–µ–≥–æ —É–≥–ª–∞ –º–∞—Ç—Ä–∏—Ü—ã
    return matrix[m - 1][n - 1];
}

//–§—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É—é–∑—â–∞—è —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π
//ùê∂(ùëö+ùëõ‚àí2,ùëö-1)=((ùëö+ùëõ‚àí2)!)/(((ùëö‚àí1)!)((ùëõ‚àí1)!))
int uniquePaths2(int m, int n) {
    long result = 1;
    for (int i = 1; i <= m - 1; i++) {
        result = result * (n + i - 1) / i;
    }
    return (int) result;
}


int main(int, char**){
    std::cout << "–ü–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–±: " << uniquePaths(3,7)<<std::endl;
    std::cout << "–í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–±: " << uniquePaths2(3,7);
}
