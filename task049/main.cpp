#include <iostream>
#include <vector>

int canCompleteCircuit(std::vector<int>& gas, std::vector<int>& cost) {
    int start = 0;                                  //индекс стартовой заправочной станции
    int totalGas = 0;                               //общее количество топлива, доступное для поездки
    int currentGas = 0;                             //текущее количество топлива в баке

    //Проходим по всем заправочным станциям
    for (int i = 0; i < gas.size(); i++) {
        int fuelGain = gas[i] - cost[i];            //разница между количеством топлива на станции и затратами на проезд до следующей станции
        totalGas += fuelGain;                       //обновляем общее количество топлива
        currentGas += fuelGain;                     //обновляем текущее количество топлива в баке
        //Если текущее количество топлива становится отрицательным, то
        //это означает, что мы не можем доехать до следующей станции
        if (currentGas < 0) {
            currentGas = 0;                         //сбрасываем текущее количество топлива
            start = i + 1;                          //обновляем стартовую станцию на следующую
        }
    }
    //Если общее количество топлива отрицательное, то это означает, что поездка невозможна
    //Возвращаем -1, если поездка невозможна, иначе возвращаем индекс стартовой станции
    return totalGas < 0 ? -1 : start;
}


int main(int, char**){
    std::vector<int> gas  = {1,2,3,4,5};
    std::vector<int> cost = {3,4,5,1,2};
    std::cout << canCompleteCircuit(gas, cost);
}
